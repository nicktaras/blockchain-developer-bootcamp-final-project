{"version":3,"sources":["components/App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createProfile","mockVersion","state","contract","methods","addProfile","account","send","from","once","hash","console","log","receipt","on","confNumber","error","then","profile","setState","active","ageRange","dates","disputeCount","location","name","nftImage","preference","sex","addDate","date","msg","concat","toConsumableArray","datesMarkup","index","output","messagesListSender","map","i","messagesList","profiles","loadWeb3","window","ethereum","web3","Web3","enable","loadBlockChainData","currentProvider","alert","eth","getAccounts","accounts","networkData","BlindDate","networks","abi","address","Contract","getProfile","Promise","all","dateIndex","getDate","Number","getAllProfiles","_ref","asyncToGenerator","regenerator_default","a","mark","_callee3","item","wrap","_context3","prev","next","abrupt","stop","_x","apply","arguments","results","resultsOutput","filter","_profile","deactivateAccount","_deactivate","sendMessage","_sendMockMessage","updateProfile","_updateProfile","_this2","react_default","createElement","className","href","target","rel","style","padding","margin","border","onClick","e","width","src","key","dangerouslySetInnerHTML","__html","sendMockMessage","id","deactivate","length","p","addr","placeholder","Component","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8aff1e85.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport BlindDate from './../build/contracts/BlindDate.json';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      profiles: [],\n      account: 'undefined',\n      contract: null,\n      profile: false,\n      dates: []\n    }\n  }\n\n  // load web3 on mount of react component\n  async componentDidMount() {\n    await this.loadWeb3()\n  }\n\n  // load data from blockchain related to users wallet address\n  async loadWeb3() {\n    if(window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      this.loadBlockChainData();\n    } else if(window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n      this.loadBlockChainData();\n    } else {\n      window.alert('ethereum is not available.');\n    }\n  }\n\n  async loadBlockChainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0]});\n    console.log('acc', accounts);\n    const networkId = 3; // ropsten\n    // TODO uncomment for localhost: const networkId = 5777; // TODO await web3.eth.net.getId();\n    const networkData = BlindDate.networks[networkId];\n    if(networkData){\n      const abi = BlindDate.abi;\n      const address = networkData.address;\n      const contract = new web3.eth.Contract(abi, address);\n      this.setState({ contract });\n\n      // get profile\n      const profile = await contract.methods.getProfile(this.state.account).call();\n      if(profile) {\n        // add date info:\n        const dates = await Promise.all(profile.dates.map((dateIndex) => {\n          return contract.methods.getDate(Number(dateIndex)).call();\n        }));\n        this.setState({ profile, dates });\n      }\n\n      // we can use this to list all profiles inside the Dapp.\n      const profiles = await contract.methods.getAllProfiles().call();\n      if(profiles){\n        var results = await Promise.all(profiles.map(async (item) => {\n          return contract.methods.getProfile(item).call();\n        }));\n        var resultsOutput = results.filter(function (_profile) {\n          return _profile.name !== profile.name;\n        });\n        this.setState({ profiles: resultsOutput });\n      }\n\n    }\n  }\n\n  async deactivate () {\n    const _deactivate = await this.state.contract.methods.deactivateAccount();\n    console.log(_deactivate);\n  }\n  \n  async sendMockMessage (dateIndex, msg) {\n    const _sendMockMessage = await this.state.contract.methods.sendMessage(Number(dateIndex), msg);\n    console.log(_sendMockMessage);\n  }\n\n  async updateProfile () {\n    const _updateProfile = await this.state.contract.methods.updateProfile(\n        'https://lh3.googleusercontent.com/rRpw4UG8rR7xIxAsxmogLClQjISJ6Xi2l6DtWx1zVVgEJAVIAlSYd3WsMk_a3P25YQMKIv8MqVCRjMdBPmgqh0ubpOZOj2KokkCD=w366',\n        'CyberPunk2000',\n        1,\n        1,\n        'china',\n        1,\n        [0, 1, 2, 3, 4]\n    );\n    console.log(_updateProfile);\n  }\n\n  // send profile as param\n  createProfile = (mockVersion) => {\n    if(mockVersion === 'a'){\n      this.state.contract.methods.addProfile(\n        this.state.account,\n        'https://lh3.googleusercontent.com/rRpw4UG8rR7xIxAsxmogLClQjISJ6Xi2l6DtWx1zVVgEJAVIAlSYd3WsMk_a3P25YQMKIv8MqVCRjMdBPmgqh0ubpOZOj2KokkCD=w366',\n        'CyberPunk001',\n        1,\n        1,\n        'china',\n        1,\n        [0, 1, 2, 3, 4]\n      )\n      .send({ from: this.state.account })\n      .once('transactionHash', (hash) => { \n        console.log('hash', hash);\n      })\n      .once('receipt', (receipt) => { \n        console.log('receipt ', receipt);\n      })\n      .on('confirmation', (confNumber, receipt) => { \n        console.log('confirmation ', confNumber, receipt);\n       })\n      .on('error', (error) => { \n        console.log('err', error);\n      })\n      .then((profile) => {\n        this.setState({ profile: [\n          this.state.account,\n        'https://lh3.googleusercontent.com/rRpw4UG8rR7xIxAsxmogLClQjISJ6Xi2l6DtWx1zVVgEJAVIAlSYd3WsMk_a3P25YQMKIv8MqVCRjMdBPmgqh0ubpOZOj2KokkCD=w366',\n        'CyberPunk001',\n        1,\n        1,\n        'china',\n        1,\n        [0, 1, 2, 3, 4]\n        ] });\n      });\n    } else if(mockVersion === 'b'){\n      this.state.contract.methods.addProfile(\n        this.state.account,\n        'https://storage.opensea.io/0x06012c8cf97bead5deae237070f9587f8e7a266d/381042-1555382669.png',\n        'PurpleKitty23',\n        1,\n        1,\n        'australia',\n        1,\n        [0, 1, 2, 3, 4]\n      ).send({ from: this.state.account })\n      .once('transactionHash', (hash) => { \n        console.log('hash', hash);\n      })\n      .once('receipt', (receipt) => { \n        console.log('receipt ', receipt);\n      })\n      .on('confirmation', (confNumber, receipt) => { \n        console.log('confirmation ', confNumber, receipt);\n       })\n      .on('error', (error) => { \n        console.log('err', error);\n       })\n      .then((profile) => {\n        this.setState({ profile: {\n          active: true,\n          ageRange: 1,\n          dates: [],\n          disputeCount: 0,\n          location: 'australia',\n          name: 'PurpleKitty23',\n          nftImage: 'https://storage.opensea.io/0x06012c8cf97bead5deae237070f9587f8e7a266d/381042-1555382669.png',\n          preference: 1,\n          sex: 1\n        }});\n      });\n    } else {\n      this.state.contract.methods.addProfile(\n        this.state.account,\n        'https://lh3.googleusercontent.com/8uYD1TXbipMuoithFNkQfLXqZKMbVH8kNeyt8FUPkcQtFjRfhWwTDqHbCdnTizFnF02uhdKGNRPovrXcdoAUk1GksHMb8SmJpdEIRw=w318',\n        'WinterL234',\n        1,\n        1,\n        'russia',\n        1,\n        [0, 1, 2, 3, 4]\n      ).send({ from: this.state.account })\n      .once('transactionHash', (hash) => { \n        console.log('hash', hash);\n      })\n      .once('receipt', (receipt) => { \n        console.log('receipt ', receipt);\n      })\n      .on('confirmation', (confNumber, receipt) => { \n        console.log('confirmation ', confNumber, receipt);\n       })\n      .on('error', (error) => { \n        console.log('err', error);\n       })\n       .then((profile) => {\n        this.setState({ profile: {\n          active: true,\n          ageRange: \"1\",\n          dates: [],\n          disputeCount: \"0\",\n          location: \"russia\",\n          name: \"WinterL234\",\n          nftImage: \"https://lh3.googleusercontent.com/8uYD1TXbipMuoithFNkQfLXqZKMbVH8kNeyt8FUPkcQtFjRfhWwTDqHbCdnTizFnF02uhdKGNRPovrXcdoAUk1GksHMb8SmJpdEIRw=w318\",\n          preference: \"1\",\n          sex: \"1\"\n        }});\n      });\n    }\n  }\n  addDate = (date, msg) => {\n    this.state.contract.methods.addDate(\n      date,\n      msg\n    )\n    .send({ from: this.state.account })\n    .once('transactionHash', (hash) => { \n      console.log('hash', hash);\n    })\n    .once('receipt', (receipt) => { \n      console.log('receipt ', receipt);\n    })\n    .on('confirmation', (confNumber, receipt) => { \n      console.log('confirmation ', confNumber, receipt);\n     })\n    .on('error', (error) => { \n      console.log('err', error);\n     })\n    .then(() => {\n      this.setState({ dates: [...this.state.dates, { date, msg }] });\n    });\n  }\n\n  datesMarkup = (date, index) => { \n    var output = \"\";\n    output += `<p>Date: ${index}`;\n    if(date.messagesListSender){\n      date.messagesListSender.map((msg, i) => {\n        output += `\n            <p>From: ${date.messagesListSender[i]}</p>\n            <p>${date.messagesList[i]}</p>\n        `;\n      });\n    }\n    output += `</p>`;\n    return output;\n  };\n  \n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark bg-dark p-0 shadow\">\n          <div>\n            <a\n              className=\"navbar-brand col-sm-3 col-md-4 mr-0\"\n              href=\"\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Blind Date\n            </a>\n          </div>\n        </nav>\n        <div style={{ padding: '5px', margin: '20px', border: '1px solid black' }}>\n          <p><small>Adds mock profile to dapp (generate on 2 different addresses)</small></p>\n          <p><button onClick={e => this.createProfile(\"a\")}>Add Mock Profile A</button></p> \n          <p><button onClick={e => this.createProfile(\"b\")}>Add Mock Profile B</button></p>\n          <p><button onClick={e => this.createProfile(\"c\")}>Add Mock Profile C</button></p>\n        </div>\n        { this.state.profile.active &&\n          <div style={{ padding: '5px', margin: '20px', border: '1px solid black' }}>\n            <p>My Profile:</p>\n            <div style={{ padding: '5px', margin: '20px', border: '1px solid black' }}>\n              <img width=\"100px\" src={ this.state.profile.nftImage }></img>\n              <p>Status: { this.state.profile.active ? 'active' : 'deactivated' }</p>\n              <p>Name: { this.state.profile.name }</p>\n              <p>Age Range: { this.state.profile.ageRange }</p>\n              <p>Location: { this.state.profile.location }</p>\n              <p>Preference: { this.state.profile.preference }</p>\n              <p>sex: { this.state.profile.sex }</p>\n              </div>\n              <p>Dates:</p>\n              <div style={{ padding: '5px', margin: '20px', border: '1px solid black' }}>\n                { \n                  this.state.dates.map((date, index) => {\n                    return (\n                      <div key={index}>\n                        <div dangerouslySetInnerHTML={{__html: this.datesMarkup(date, index)}}></div>\n                        <p>Send Message:</p>\n                        <button onClick={e => this.sendMockMessage(date.id, 'Hey, I really like your profile name, what is the story behind it? Where abouts do you live in Russia?')}>Send Mock Reply Message</button>\n                      </div>\n                    )\n                  })\n                }\n              </div>\n              { this.state.profile.active === true &&\n                <div>\n                <p>Account:</p>\n                <div style={{ padding: '5px', margin: '20px', border: '1px solid black' }}>\n                  <button onClick={e => this.deactivate()}>Deactivate</button>\n                  <button onClick={e => this.updateProfile()}>Update Profile</button>\n                </div>\n                </div>\n              }\n          </div> \n        }\n        <div style={{ padding: '5px', margin: '20px', border: '1px solid black' }}>\n          Find a date: { this.state.profiles.length === 0 && <small>No profiles found.</small> }\n          <div>\n            { this.state.profiles && this.state.profiles.map((p, i) => {\n                return <div key={i}>\n                 <div style={{ padding: '5px', margin: '20px', border: '1px solid black' }}>\n                    <img width=\"100px\" src={ p.nftImage }></img>\n                    <div style={{ padding: '5px', margin: '12px 0' }}>\n                      <p>Status: { p.active ? 'active' : 'deactivated' }</p>\n                      <p>Name: { p.name }</p>\n                      <p>Age Range: { p.ageRange }</p>\n                      <p>Location: { p.location }</p>\n                      <p>Preference: { p.preference }</p>\n                      <p>sex: { p.sex }</p>\n                    </div>\n                    <div style={{ padding: '5px', margin: '20px', border: '1px solid black' }}>\n                      <button onClick={e => this.addDate(p.addr, 'Hi there good lookin...')}>Connect</button> <input placeholder=\"Hi there!\"></input>\n                    </div>\n                  </div> \n                </div>;\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}